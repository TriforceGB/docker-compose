services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # network_mode: service:tailscale-traefik
    ports:
      - 80:80
      - 443:443
      - 81:81
      - 444:444
    # - 443:443/tcp # Uncomment if you want HTTP3
    # - 443:443/udp # Uncomment if you want HTTP3
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN} # if using .env
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    env_file: .env # use .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKERFOLDER}/traefik/data/traefik.yml:/traefik.yml:ro
      - ${DOCKERFOLDER}/traefik/data/acme.json:/acme.json
      - ${DOCKERFOLDER}/traefik/data/config.yml:/config.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}
      - traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.traefik.middlewares=traefik-https-redirect
      - traefik.http.routers.traefik-secure.entrypoints=https
      - traefik.http.routers.traefik-secure.rule=Host(`traefik.schultzserver.ca`)
      - traefik.http.routers.traefik-secure.middlewares=traefik-auth
      - traefik.http.routers.traefik-secure.middlewares=authentik@file
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=cloudflare
      - traefik.http.routers.traefik-secure.tls.domains[0].main=schultzserver.ca
      - traefik.http.routers.traefik-secure.tls.domains[0].sans=*.schultzserver.ca
      - traefik.http.routers.traefik-secure.service=api@internal
    networks:
      - frontbridge
      - backbridge
      - gluetun
  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    restart: unless-stopped
    volumes:
      - ${DOCKERFOLDER}/adguardhome/work:/opt/adguardhome/work
      - ${DOCKERFOLDER}/adguardhome/conf:/opt/adguardhome/conf
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 3002:3000/tcp
      - 853:853/tcp
      - 853:853/udp
      - 5443:5443/tcp
      - 5443:5443/udp
      - 6060:6060/tcp
      - 85:85/tcp
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguard.rule=Host(`adguard.schultzserver.ca`)
      - traefik.http.routers.adguard.entrypoints=https
      - traefik.http.routers.adguard.tls=true
      - traefik.http.routers.adguard.tls.certresolver=cloudflare
      - traefik.http.routers.adguard.middlewares=authentik@file
      - traefik.http.services.adguard.loadbalancer.server.port=3000
      - traefik.docker.network=frontbridge
    networks:
      - frontbridge
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=$TUNNEL_TOKEN
    command: tunnel --no-autoupdate run
    networks:
      - backbridge
      - frontbridge
      - gluetun
  cloudflare-ddns:
    image: timothyjmiller/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DOCKERFOLDER}/cloudflare-ddns/config.json:/config.json
    networks:
      - backbridge
networks:
  frontbridge:
    external: true
  backbridge:
    external: true
  gluetun:
    external: true
